[build]
target = "{{ rust_target }}"

[target.{{ rust_target }}]
linker = "ldproxy"
runner = "espflash flash --monitor" # Select this runner for espflash v3.x.x
rustflags = [ "--cfg",  "espidf_time64"] # Extending time_t for ESP IDF 5: https://github.com/esp-rs/rust/issues/110

[unstable]
{% if std -%}
build-std = ["std", "panic_abort"]
{%- else -%}
build-std = ["core", "alloc", "panic_abort"]
{%- endif %}

[env]
MCU="{{ mcu }}"
# Note: this variable is not used by the pio builder (`cargo build --features pio`)
{%- if espidfver == "v5.1" %}
ESP_IDF_VERSION = "v5.1.4"
{% elsif espidfver == "v5.2" %}
ESP_IDF_VERSION = "v5.2.2"
{% elsif espidfver == "master" %}
ESP_IDF_VERSION = "master"
{% endif %}
# Workaround for https://github.com/esp-rs/esp-idf-template/issues/174 
CRATE_CC_NO_DEFAULTS = "1"

# Set the install location for the ESP-IDF framework tooling.
{%- if installdir == "workspace - per project (inside .embuild)" %}
ESP_IDF_TOOLS_INSTALL_DIR = "workspace"
{% elsif installdir == "global - per user (inside $HOME/.espressif)" %}
ESP_IDF_TOOLS_INSTALL_DIR = "global"
{% endif %}

# For more ESP-IDF specific build options check out https://github.com/esp-rs/esp-idf-sys/blob/master/BUILD-OPTIONS.md